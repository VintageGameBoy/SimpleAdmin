using System;
using System.ComponentModel.DataAnnotations;
using Masuit.Tools.Core.Validator;
namespace @(@Model.ServicePosition);

/// <summary>
/// @(@Model.DescriptionPage)参数
/// </summary>
public class @Model.PageInput : BasePageInput
{
  @{PageInput();}
}

/// <summary>
/// @(@Model.DescriptionAdd)参数
/// </summary>
public class @Model.AddInput
{
  @{AddInput();}
}

/// <summary>
/// @(@Model.DescriptionEdit)参数
/// </summary>
public class @Model.EditInput : @Model.AddInput
{
    /// <summary>
    /// Id
    /// </summary>
    [IdNotNull(ErrorMessage = "Id不能为空")]
    public long Id { get; set; }
}



@{
//生成分页字段
void PageInput()
{
  var tableFieIds=@Model.TableFields;//获取字段
  foreach (var column in tableFieIds){
  if(column.QueryWhether=="Y")//判断是否查询
  {
  if(column.EffectType=="datepicker"){//如果是时间类型
  @:/// <summary>
  @:/// @column.FieldRemark
  @:/// </summary>
  @:public @column.FieldNetType? Start@(@column.FieldName)  { get; set; }
  @:
  @:/// <summary>
  @:/// @column.FieldRemark
  @:/// </summary>
  @:public @column.FieldNetType? End@(@column.FieldName) { get; set; }
  @:
  }
  else{
  @:/// <summary>
  @:/// @column.FieldRemark
  @:/// </summary>
  if(column.FieldNetType!="string")//如果不是string类型后面要加?号
  {
  @:public @(@column.FieldNetType)? @column.FieldName { get; set; }
  }else{
  @:public @column.FieldNetType @column.FieldName { get; set; }
  }
  @:
  }}}}
}

@{
//生成新增字段
void AddInput()
{
  var tableFieIds=@Model.TableFields;
  foreach (var column in tableFieIds){//遍历字段
  if(column.WhetherAddUpdate=="Y")//判断是否新增
  {
  @:/// <summary>
  @:/// @column.FieldRemark
  @:/// </summary>
  if(column.WhetherRequired=="Y")//判断是否必填
  {
  @:[Required(ErrorMessage = "@(@column.FieldName)不能为空")]
  }
  if(column.FieldNetType!="string")//如果不是string类型后面要加?号
  {
  @:public @(@column.FieldNetType)? @column.FieldName { get; set; }
  }else{
  @:public @column.FieldNetType @column.FieldName { get; set; }
  }
  @:
  }
  }
}
}

